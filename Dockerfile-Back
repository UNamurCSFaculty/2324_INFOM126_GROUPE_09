# Based on Microsoft's docker samples for dotnet core
# available at https://github.com/dotnet/dotnet-docker/tree/master/samples/aspnetapp
FROM mcr.microsoft.com/dotnet/sdk:7.0-jammy AS build
# First install nodejs - required to build generated client app
WORKDIR /app
RUN apt-get update -yq && apt-get install -yq curl
RUN curl -sL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get update && \
    apt-get install -yq nodejs && \
    rm -rf /var/lib/apt/lists/*

# Restore dependencies of .net core projects taking advantage of docker layer caching
COPY src/*/*.csproj ./src/
COPY Directory.Packages.props Directory.Packages.props
RUN for file in $(ls src/*.csproj); do mkdir -p ${file%.*} && mv $file ${file%.*}; done
RUN dotnet restore "src/PipelineTFM/PipelineTFM.csproj"

# Copy everything else and build app
COPY . ./
WORKDIR src/PipelineTFM/
RUN dotnet publish "PipelineTFM.csproj" -c Release -o /app/out

# Final stage/image
FROM mcr.microsoft.com/dotnet/aspnet:7.0-jammy AS runtime
EXPOSE 80
WORKDIR /app
COPY docker-entrypoint-back.sh .
RUN chmod +x /app/docker-entrypoint-back.sh
COPY --from=build /app/out .
ENV ASPNETCORE_ENVIRONMENT=Production

ENTRYPOINT ["./docker-entrypoint-back.sh"]
