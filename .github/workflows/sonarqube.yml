name: SonarQube Report

on:
  push:
    branches: ['main']
    paths-ignore: ['**.md']
  pull_request:
    branches: ['main']
    paths-ignore: ['**.md']

jobs:
  sonarQube:
    name: SonarQube
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install Coverlet Console
        shell: powershell
        run: dotnet tool install --global coverlet.console
      - name: Start SonarQube
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"TFM" /d:sonar.cs.opencover.reportsPaths=test/**/coverage.opencover.xml /d:sonar.host.url="${{ secrets.SONARQUBE_HOST }}" /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"
      - name: dotnet build
        shell: powershell
        run: dotnet build -c Release
      - name: dotnet test
        shell: powershell
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Stop SonarQube
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: .sonarqube/out/.sonar/report-task.txt
        timeout-minutes: 3
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
